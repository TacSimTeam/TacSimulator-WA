#[allow(non_camel_case_types)]
#[derive(PartialEq, PartialOrd, Clone, Copy, Debug)]
pub enum IOMapAddr {
    TIMER0_COUNTER_CYCLE = 0x00,
    TIMER0_FLAG_CTRL = 0x02,
    TIMER1_COUNTER_CYCLE = 0x04,
    TIMER1_FLAG_CTRL = 0x06,

    // シミュレータでは内蔵のターミナルに接続される
    FT232RL_RECEIVE_SERVE = 0x08,
    FT232RL_STAT_CTRL = 0x0a,

    TECSERIAL_RECEIVE_SERVE = 0x0c,
    TECSERIAL_STAT_CTRL = 0x0e,
    MICROSD_STAT_CTRL = 0x10,
    MICROSD_MEMADDR = 0x12,
    MICROSD_SECTORHIGH = 0x14,
    MICROSD_SECTORLOW = 0x16,
    PIO_IN_OUT = 0x18,
    PIO_00_ADC = 0x1a,
    PIO_00_OUTEX = 0x1c,
    PIO_MODE_00 = 0x1e,
    SPI_SHIFT = 0x20,
    SPI_STAT_SCLKFREQ = 0x22,
    IOINTR_00_MASK = 0x24,
    IOINTR_00_XOR = 0x26,

    // シミュレータでは開発者ツールのコンソールログに接続される
    RN4020_RECEIVE_SERVE = 0x28,
    RN4020_STAT_CTRL = 0x2a,
    RN4020_00_COMMAND = 0x2c,
    RN4020_CONNECTION = 0x2e,

    TEC_DATALAMP_00 = 0x30,
    TEC_00_DATASW = 0x32,
    TEC_00_FUNCSW = 0x34,
    TEC_STAT_CTRL = 0x36,

    MMU_TLB0HIGH = 0x60,
    MMU_TLB0LOW = 0x62,
    MMU_TLB1HIGH = 0x64,
    MMU_TLB1LOW = 0x66,
    MMU_TLB2HIGH = 0x68,
    MMU_TLB2LOW = 0x6a,
    MMU_TLB3HIGH = 0x6c,
    MMU_TLB3LOW = 0x6e,
    MMU_TLB4HIGH = 0x70,
    MMU_TLB4LOW = 0x72,
    MMU_TLB5HIGH = 0x74,
    MMU_TLB5LOW = 0x76,
    MMU_TLB6HIGH = 0x78,
    MMU_TLB6LOW = 0x7a,
    MMU_TLB7HIGH = 0x7c,
    MMU_TLB7LOW = 0x7e,

    MMU_TLB8HIGH = 0x80,
    MMU_TLB8LOW = 0x82,
    MMU_TLB9HIGH = 0x84,
    MMU_TLB9LOW = 0x86,
    MMU_TLB10HIGH = 0x88,
    MMU_TLB10LOW = 0x8a,
    MMU_TLB11HIGH = 0x8c,
    MMU_TLB11LOW = 0x8e,
    MMU_TLB12HIGH = 0x90,
    MMU_TLB12LOW = 0x92,
    MMU_TLB13HIGH = 0x94,
    MMU_TLB13LOW = 0x96,
    MMU_TLB14HIGH = 0x98,
    MMU_TLB14LOW = 0x9a,
    MMU_TLB15HIGH = 0x9c,
    MMU_TLB15LOW = 0x9e,

    MMU_00_IPLBANK = 0xa0,
    MMU_ERRORADDR_MMUON = 0xa2,
    MMU_ERRORCAUSE_00 = 0xa4,
    MMU_PAGE_00 = 0xa6,

    CONSOLE_DATASW_DATAREG = 0xf8,
    CONSOLE_ADDRREG_00 = 0xfa,
    CONSOLE_ROTSW_00 = 0xfc,
    CONSOLE_FUNCREG_00 = 0xfe,
}

impl IOMapAddr {
    pub fn from_u8(val: u8) -> Option<Self> {
        match val {
            0x00 => Some(IOMapAddr::TIMER0_COUNTER_CYCLE),
            0x02 => Some(IOMapAddr::TIMER0_FLAG_CTRL),
            0x04 => Some(IOMapAddr::TIMER1_COUNTER_CYCLE),
            0x06 => Some(IOMapAddr::TIMER1_FLAG_CTRL),
            0x08 => Some(IOMapAddr::FT232RL_RECEIVE_SERVE),
            0x0a => Some(IOMapAddr::FT232RL_STAT_CTRL),
            0x0c => Some(IOMapAddr::TECSERIAL_RECEIVE_SERVE),
            0x0e => Some(IOMapAddr::TECSERIAL_STAT_CTRL),
            0x10 => Some(IOMapAddr::MICROSD_STAT_CTRL),
            0x12 => Some(IOMapAddr::MICROSD_MEMADDR),
            0x14 => Some(IOMapAddr::MICROSD_SECTORHIGH),
            0x16 => Some(IOMapAddr::MICROSD_SECTORLOW),
            0x18 => Some(IOMapAddr::PIO_IN_OUT),
            0x1a => Some(IOMapAddr::PIO_00_ADC),
            0x1c => Some(IOMapAddr::PIO_00_OUTEX),
            0x1e => Some(IOMapAddr::PIO_MODE_00),
            0x20 => Some(IOMapAddr::SPI_SHIFT),
            0x22 => Some(IOMapAddr::SPI_STAT_SCLKFREQ),
            0x24 => Some(IOMapAddr::IOINTR_00_MASK),
            0x26 => Some(IOMapAddr::IOINTR_00_XOR),
            0x28 => Some(IOMapAddr::RN4020_RECEIVE_SERVE),
            0x2a => Some(IOMapAddr::RN4020_STAT_CTRL),
            0x2c => Some(IOMapAddr::RN4020_00_COMMAND),
            0x2e => Some(IOMapAddr::RN4020_CONNECTION),
            0x30 => Some(IOMapAddr::TEC_DATALAMP_00),
            0x32 => Some(IOMapAddr::TEC_00_DATASW),
            0x34 => Some(IOMapAddr::TEC_00_FUNCSW),
            0x36 => Some(IOMapAddr::TEC_STAT_CTRL),
            0x60 => Some(IOMapAddr::MMU_TLB0HIGH),
            0x62 => Some(IOMapAddr::MMU_TLB0LOW),
            0x64 => Some(IOMapAddr::MMU_TLB1HIGH),
            0x66 => Some(IOMapAddr::MMU_TLB1LOW),
            0x68 => Some(IOMapAddr::MMU_TLB2HIGH),
            0x6a => Some(IOMapAddr::MMU_TLB2LOW),
            0x6c => Some(IOMapAddr::MMU_TLB3HIGH),
            0x6e => Some(IOMapAddr::MMU_TLB3LOW),
            0x70 => Some(IOMapAddr::MMU_TLB4HIGH),
            0x72 => Some(IOMapAddr::MMU_TLB4LOW),
            0x74 => Some(IOMapAddr::MMU_TLB5HIGH),
            0x76 => Some(IOMapAddr::MMU_TLB5LOW),
            0x78 => Some(IOMapAddr::MMU_TLB6HIGH),
            0x7a => Some(IOMapAddr::MMU_TLB6LOW),
            0x7c => Some(IOMapAddr::MMU_TLB7HIGH),
            0x7e => Some(IOMapAddr::MMU_TLB7LOW),
            0x80 => Some(IOMapAddr::MMU_TLB8HIGH),
            0x82 => Some(IOMapAddr::MMU_TLB8LOW),
            0x84 => Some(IOMapAddr::MMU_TLB9HIGH),
            0x86 => Some(IOMapAddr::MMU_TLB9LOW),
            0x88 => Some(IOMapAddr::MMU_TLB10HIGH),
            0x8a => Some(IOMapAddr::MMU_TLB10LOW),
            0x8c => Some(IOMapAddr::MMU_TLB11HIGH),
            0x8e => Some(IOMapAddr::MMU_TLB11LOW),
            0x90 => Some(IOMapAddr::MMU_TLB12HIGH),
            0x92 => Some(IOMapAddr::MMU_TLB12LOW),
            0x94 => Some(IOMapAddr::MMU_TLB13HIGH),
            0x96 => Some(IOMapAddr::MMU_TLB13LOW),
            0x98 => Some(IOMapAddr::MMU_TLB14HIGH),
            0x9a => Some(IOMapAddr::MMU_TLB14LOW),
            0x9c => Some(IOMapAddr::MMU_TLB15HIGH),
            0x9e => Some(IOMapAddr::MMU_TLB15LOW),
            0xa0 => Some(IOMapAddr::MMU_00_IPLBANK),
            0xa2 => Some(IOMapAddr::MMU_ERRORADDR_MMUON),
            0xa4 => Some(IOMapAddr::MMU_ERRORCAUSE_00),
            0xa6 => Some(IOMapAddr::MMU_PAGE_00),
            0xf8 => Some(IOMapAddr::CONSOLE_DATASW_DATAREG),
            0xfa => Some(IOMapAddr::CONSOLE_ADDRREG_00),
            0xfc => Some(IOMapAddr::CONSOLE_ROTSW_00),
            0xfe => Some(IOMapAddr::CONSOLE_FUNCREG_00),
            _ => None,
        }
    }
}
